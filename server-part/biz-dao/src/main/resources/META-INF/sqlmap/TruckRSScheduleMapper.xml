<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oasis.wolfburg.dao.truckRSSchedule.TruckRSScheduleDAO">

	<!-- crud -->
	<delete id="delete">
		<include refid="sqlmap.common.model.delete" />
	</delete>

	<update id="update" statementType="PREPARED" timeout="20000" parameterType="TruckRSSchedule">
		<include refid="sqlmap.common.model.update" />
	</update>

	<select id="find" resultType="TruckRSSchedule">
		<include refid="sqlmap.common.model.find" />
	</select>

	<insert id="insert" parameterType="map">
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			<include refid="sqlmap.common.model.getSequence" />
		</selectKey>
		<include refid="sqlmap.common.model.insert" />
	</insert>

	<delete id="deleteByIds" parameterType="TruckRSSchedule">
		<include refid="sqlmap.common.model.deleteByIds" />
	</delete>
	
	<sql id="pageListClause">
		where 1=1
		<if test="name!=null and name!='' ">
		and (t.name like '%'||#{name}||'%')
		</if>
		<if test="routeId!=null and routeId!='' ">
		and t.routeid = #{routeId}
		</if>
		<if test="routeName!=null and routeName!='' ">
		and t.route_name like '%'||#{routeName}||'%'
		</if>
		<if test="status!=null and status!='' ">
		and t.status = #{status}
		</if>
		<if test="statuses!=null and statuses.size()>0">
			 and t.status in
			<foreach collection="statuses" index="dex" item="item" open="(" close=")" separator=",">
	  			#{item}
	  		</foreach>
		</if>
	</sql>
	
	<select id="selectPageList" resultType="TruckRSSchedule" parameterType="com.oasis.wolfburg.common.so.truckRSSchedule.TruckRSScheduleSO">
		select * from WL_TRUCKRS_SCHEDULE t
		<include refid="pageListClause"/>
		
		order by id desc
	</select>
	
	<select id="selectCount" resultType="int" parameterType="com.oasis.wolfburg.common.so.truckRSSchedule.TruckRSScheduleSO">
		select count(1) from WL_TRUCKRS_SCHEDULE t
		<include refid="pageListClause"/>
	</select>
	
	<update id="updateStatus" parameterType="list">
		update wl_truckrs_schedule t set t.status='PUBLISH' where t.status='NEW' and t.id in
		<foreach collection="list" index="dex" item="item" open="(" close=")" separator=",">
  			#{item}
  		</foreach>
	</update>
	
	<select id="selectPublishList" parameterType="map" resultType="TruckRSSchedule">
		select * from wl_truckrs_schedule t where t.status = 'PUBLISH'
		<![CDATA[
		and (t.last_date is null or trunc(t.last_date)<trunc(#{date})+#{num} )
		and t.begin_date <= trunc(#{date}+#{num})
		and t.end_date >= trunc(#{date})
		]]>
	</select>
	
	<update id="updateLastDate" parameterType="map">
		update wl_truckrs_schedule t set t.last_date=#{lastDate} where id in 
		<foreach collection="ids" index="dex" item="item" open="(" close=")" separator=",">
  			#{item}
  		</foreach>
	</update>
	
	<select id="checkDuplication" resultType="int" parameterType="TruckRSSchedule">
        select count(1) from wl_truckrs_schedule t where t.name = #{name} and t.status != 'CLOSED'
        <if test="id!=null">
        	and t.id != #{id}
        </if>
    </select>
</mapper>