<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:fb="http://flexbase.800best.com/mxml"
		 xmlns:flexlib="http://code.google.com/p/flexlib/"
		 xmlns:grid="com.oasis.component.grid.*"
		 width="100%" height="100%"  creationComplete="init()" xmlns:controls="flexlib.controls.*" xmlns:truck="com.oasis.tmsv5.view.truck.*"  >
	<mx:Script>
		<![CDATA[
			import com.best.oasis.flexbase.components.grid.columnRender.CopyableDataGridItemRenderer;
			import com.oasis.component.page.PageList;
			import com.oasis.tmsv5.truck.TruckController;
			import com.oasis.tmsv5.view.popup.CarrierDialog;
			import com.oasis.wolfburg.enum.EnumManage;
			import com.oasis.wolfburg.so.truck.TruckSO;
			import com.oasis.wolfburg.vo.carrier.Carrier;
			import com.oasis.wolfburg.vo.insure.Insure;
			import com.oasis.wolfburg.vo.truck.Truck;
			
			import mx.collections.ArrayCollection;
			import mx.containers.ViewStack;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			[Bindable]
			public var dataProvider:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var truckTypeList:ArrayCollection = EnumManage.getTruckType4list();
			
			[Bindable]
			public var statusList:ArrayCollection = EnumManage.getTruckStatus4list();
			
			[Inject]
			public var truckController:TruckController;
			
			[Bindable]
			public var truckStatusArray:ArrayCollection = EnumManage.getTruckStatus();
			
			[Bindable]
			public var truckResourceTypeArray:ArrayCollection = EnumManage.getTruckResourceType();
			
			[Bindable]
			public var runningStatusList:ArrayCollection = EnumManage.getTruckRunningStatus();
			
			[Bindable]
			public var pageList:PageList = new PageList();
			
			[Bindable]
			public var truckSO:TruckSO = new TruckSO();
			
			private function init():void{
				getPageData(truckSO.pageNumber, truckSO.objectsPerPage);
				grid.dataProvider = dataProvider;
			}
			
			private function freshViewForm(truck:Truck):void{
				view.truckVO = truck;
				var arrs:ArrayCollection = view.truckVO.insureList;
				for(var i:int=0;i<2&&i<arrs.length;i++){
					if(i == 0){
						view.insureVO1 = arrs[0] as Insure;
					}else{
						view.insureVO2 = arrs[1] as Insure;
					}
				}
				rightPanel.selectedIndex=0;
				view.freshForm();
			}
			
			private function getPageData(pageNum:int, pageSize:int,callBack:Function=null):void{
				if(typeId.selectedIndex != -1){
					truckSO.truckType = typeId.selectedItem.data;
				}
				if(statusId.selectedIndex != -1){
					truckSO.status = statusId.selectedItem.data;
				}
				truckSO.pageNumber = pageNum;
				truckSO.objectsPerPage = pageSize;
				truckController.getPageList(truckSO, pageList,callBack);
			}
			
			[EventHandler( event="TruckEvent.TRUCK_STATUS_LIST_EVENT" )]
			public function search():void{
				truckSO.pageNumber=1;
				truckController.getPageList(truckSO, pageList);
			}
			
			protected function create_clickHandler():void
			{
				rightPanel.selectedIndex = 0;
			}
			
			protected function itemClickHandle(event:ListEvent):void{
				var itemRenderer:CopyableDataGridItemRenderer = event.itemRenderer as CopyableDataGridItemRenderer;
				var truckVO:Truck = itemRenderer.data as Truck;
				truckController.findTruck(truckVO,function():void{
					freshViewForm(truckVO);
				});
			}
			
			private function getTruckResourceType(item:Object,column:DataGridColumn):String{
				var resourceType:String = item.resourceType as String;
				return EnumManage.getDisplayText(resourceType,truckResourceTypeArray);
			}
			
			private function getStatusLabel(item:Object,column:DataGridColumnNested):String{
				var status:String = item.status as String;
				return EnumManage.getDisplayText(status,statusList);
			}
			
			private function getTruckTypeLabel(item:Object,column:DataGridColumnNested):String{
				var truckType:String = item.truckType as String;
				return EnumManage.getDisplayText(truckType,truckTypeList);
			}
			
			private function getRunningStatusLabel(item:Object,column:DataGridColumnNested):String{
				var runningStatus:String = item.runningStatus as String;
				return EnumManage.getDisplayText(runningStatus,runningStatusList);
			}
			
			protected function addCarrier():void
			{
				var dialog:CarrierDialog = CarrierDialog(PopUpManager.createPopUp(root, CarrierDialog , true));
				PopUpManager.centerPopUp(dialog);
				dialog.passFun = getCarrierCallBack;
			}
			
			public function getCarrierCallBack(item:Object):void{
				var carrier:Carrier = Carrier(item);
				truckSO.carrierName = carrier.carrierName;
				truckSO.carrierId = carrier.id;
			}
			
			public function clearTruck():void{
				truckSO.carrierName = "";
				truckSO.carrierId = NaN;
			}
			
			public function chgCarrier():void{
				truckSO.carrierId = NaN;
			}
		]]>
	</mx:Script>
	<mx:HDividedBox width="100%" height="100%">
		<mx:VBox width="35%" height="100%">
			<flexlib:WindowShade id="ws1"
								 tabChildren="{ws1.opened}"
								 styleName="linkButtonWindowShade"
								 label="搜索"
								 width="100%">
				<mx:HBox  width="100%" >
					<fb:MultiColumnForm  numColumns="1" defaultButton="{searchBtn}">
						<fb:MultiColumnFormItem label="车牌号：" >
							<mx:TextInput id="licensePlate" text="@{truckSO.licensePlate}" width="100"/>
						</fb:MultiColumnFormItem>
						<fb:MultiColumnFormItem label="车型：" >
							<fb:AdvancedComboBox dataProvider="{truckTypeList}" labelField="label" id="typeId" width="100"/>
						</fb:MultiColumnFormItem>
						<fb:MultiColumnFormItem label="驾驶员姓名：" >
							<mx:TextInput id="driverName" text="@{truckSO.driverName}" width="100"/>
						</fb:MultiColumnFormItem>
						<fb:MultiColumnFormItem label="状态：" >
							<fb:AdvancedComboBox dataProvider="{statusList}" labelField="label" id="statusId" width="100"/>
						</fb:MultiColumnFormItem>
						<fb:MultiColumnFormItem label="所属承运商："  >
							<fb:SelectableTextInput searchButtonClick="addCarrier" id="truckCarrierName" textInputEditable="true"
													text="@{truckSO.carrierName}" width="150" dataChange="chgCarrier()" clearButtonClick="clearTruck"/>
						</fb:MultiColumnFormItem>
						
						<mx:HBox width="100%">  
							<mx:Spacer width="100%"/>
							<fb:MultiColumnFormItem>
								<mx:Button label="查询" click="getPageData(1, truckSO.objectsPerPage)" id="searchBtn"/>
							</fb:MultiColumnFormItem>
						</mx:HBox>
					</fb:MultiColumnForm>
				</mx:HBox>
				</flexlib:WindowShade>
			<grid:PageableDataGrid  id="grid" dataProvider="{pageList.list}" width="100%"
								  getPageData="getPageData"  currentPageNum="{truckSO.pageNumber}" totalItemNum="{pageList.fullListSize}"
								  pageSize="{truckSO.objectsPerPage}"
								  height="100%" allowMultipleSelection="false" showControlColumn="false" itemClick="itemClickHandle(event)">
				<grid:columns >
					<grid:DataGridColumnNested headerText="车牌号" dataField="licensePlate" width="80"/>
					<grid:DataGridColumnNested headerText="联系电话" dataField="contactPhone1" width="100"/>
					<grid:DataGridColumnNested headerText="状态" dataField="truckType" width="60"  labelFunction="getStatusLabel"/>
					<grid:DataGridColumnNested headerText="资源" dataField="resourceType" width="60" labelFunction="getTruckResourceType"/>
					<grid:DataGridColumnNested headerText="运行状态" dataField="runningStatus" width="60"  labelFunction="getRunningStatusLabel"/>
				</grid:columns>
			</grid:PageableDataGrid>
		</mx:VBox>
		<mx:ViewStack id="rightPanel" selectedIndex="0" width="65%" height="100%" creationPolicy="auto" >
			<truck:TruckAddRoute id="view" height="100%" width="100%"/>
		</mx:ViewStack>
	</mx:HDividedBox>
</mx:VBox>
