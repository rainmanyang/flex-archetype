<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:fx="http://ns.adobe.com/mxml/2009"       
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:fb="http://flexbase.800best.com/mxml" 
		  xmlns:nv="com.oasis.wolfburg.validator.*"
		  width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off"  height="100%" xmlns:route="route.*" title="创建" xmlns:grid="com.oasis.component.grid.*">
	
	<fx:Declarations>
		<mx:StringValidator id="nameValidator" source="{nameCN}" property="text" required="true" requiredFieldError="必填"/>
		<mx:StringValidator id="codeValidator" source="{code}" property="text" required="true" requiredFieldError="必填"/>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->  
		<nv:NumberValidator  id="distanceValidator" source="{distance}" property="text" requiredFieldError="必须为数字"/>  
		<nv:NumberValidator  id="enrouteValidator" source="{enrouteDays}" property="text" requiredFieldError="必须为数字"/>  
		<!--
			<mx:StringValidator id="chargeValidator" source="{charge}" property="text" required="true" requiredFieldError="必填"/>
			<mx:StringValidator id="distanceValidator" source="{distance}" property="text" required="true" requiredFieldError="必填"/>
			<mx:StringValidator id="enrouteDaysValidator" source="{enrouteDays}" property="text" required="true" requiredFieldError="必填"/>
		-->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			import com.best.oasis.flexbase.components.number.NumberInput;
			import com.best.oasis.flexbase.util.ValidationUtils;
			import com.oasis.tmsv5.event.RouteEvent;
			import com.oasis.tmsv5.route.RouteController;
			import com.oasis.tmsv5.view.popup.POSDialog;
			import com.oasis.utils.ViewUtils;
			import com.oasis.wolfburg.vo.route.PosView;
			import com.oasis.wolfburg.vo.route.Route;
			import com.oasis.wolfburg.vo.route.RouteLine;
			
			import mx.collections.ArrayCollection;
			import mx.containers.ViewStack;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.validators.Validator;
			
			[Bindable]
			public var stops:ArrayCollection = new ArrayCollection();//DataGenarator.getAccount();
			
			[Bindable]
			public var vo:Route= new Route();
			
			[Inject]
			public var routeController:RouteController;
			
			[Dispatcher]
			public var dispatch:IEventDispatcher;
			
			public var posArray:Object = new Object();
			protected function addPOS():void
			{
				var dialog:POSDialog = 
					POSDialog(PopUpManager.createPopUp(root, POSDialog , true));
				dialog.passFun = localFun;
				PopUpManager.centerPopUp(dialog);
			}
			
			public function localFun(item:Object):void{
				var posVO : PosView = PosView(item);
				addStop(posVO.name,posVO.id);
				//绑定posId
				//posArray[posVO.name] = posVO.id;
			}
			/**
			 * 添加站点
			 **/
			protected function addStop(stopName:String,posId:Number):void {
				//ViewUtils.clearErrorString("frm");
				var length:int = stops.length;
				//TODO 此处代码无用
				for(var i:int = 0; i < length; i++ ){
					var existRouteLine : RouteLine = stops[i];
					var startStopName : String = existRouteLine.startStopName;
					var endStopName : String = existRouteLine.endStopName;
//					if(startStopName == stopName || endStopName == stopName){
//						Alert.show("该站点已经添加过，请重新选择!");
//						return;
//					}
					
				}
				if(length == 0){
					var routeLineVO:RouteLine = new RouteLine();
					routeLineVO.startStopName = stopName;
					routeLineVO.startPosId = posId;
					stops.addItem(routeLineVO);
				}else{
					var lastVO:RouteLine = RouteLine(stops[length-1]);
					if(length == 1 && lastVO.endStopName == null){
						lastVO.endStopName = stopName;
						lastVO.endPosId = posId;
					}else{
						var nextVO:RouteLine = new RouteLine();
						nextVO.startStopName = lastVO.endStopName;
						nextVO.startPosId = lastVO.endPosId;
						nextVO.endStopName = stopName;
						nextVO.endPosId = posId;
						stops.addItem(nextVO);
					}
				}
				
			}
			
			protected function deleteStop():void {
				var total:int = stops.length;
				var selectedIndex:int = routeLines.selectedIndex;
				if(selectedIndex != 0 && selectedIndex != total-1){
					var selectedNextVO:RouteLine = stops[selectedIndex+1];
					var selectedNextStopName:String = selectedNextVO.endStopName;
					var selectedPreVO:RouteLine = stops[selectedIndex-1];
					stops.removeItemAt(selectedIndex+1);
					selectedPreVO.endStopName = selectedNextStopName;
				}
				stops.removeItemAt(selectedIndex);
			}
			
			/**
			 * 创建成功回调，弹出提示信息，清空表单
			 */ 
			private function successCallBack():void{
				vo = new Route();
				stops = new ArrayCollection();
				Alert.show("线路新增成功!");
				dispatch.dispatchEvent(new RouteEvent(RouteEvent.ROUTE_LIST_EVENT));
				ViewUtils.clearErrorString(form);
			}
			
			/**
			 * 创建失败回调，显示校验信息，后台方法见PosComponent.validatIfCanCreate
			 */ 
			private function validationCallBack(event:FaultEvent):void{
				var error:Object = JSON.decode(event.fault.faultString);
//				var uc:UIComponent = new UIComponent();    
//				uc.addChild(error);   
				ValidationUtils.showAllFieldErrors(error,this,true);
			}
			
			/**
			 * 表单前台校验
			 */ 
			private function validate():Boolean{
				var errors:Array = Validator.validateAll([nameValidator,codeValidator,distanceValidator,enrouteValidator]);
				if(errors.length > 0 ){
					return false&&validateStop();
				}
				return true&&validateStop();
			}
			
			private function validateStop():Boolean{
				var length:int = stops.length;
				if(length < 1){
					//routeLines.errorString = "请添加站点!";
					Alert.show("请添加网点!");
					return false;
				}else if(length == 1){
					var routeLine:RouteLine = stops[0];
					if(routeLine.startStopName ==  null || routeLine.startStopName == "" || routeLine.endStopName == null || routeLine.endStopName == ""){
						//routeLines.errorString = "线路至少有一个起始站点和一个终点站点";
						Alert.show("线路至少有一个起始网点和一个终点网点!");
						return false;
					} 
				}
				
				return true;
			}
			
			protected function btnSave(event:MouseEvent):void
			{
				if(!validate()){
					return;
				}
				if(!collectData()){
					Alert.show("请检查网点，网点选择不合理!");
					return;
				}
				routeController.create(vo,successCallBack,validationCallBack);
			}
			
			protected function btnReturn(event:MouseEvent):void
			{
				vo = new Route();
				stops = new ArrayCollection();
				var parent:ViewStack = this.parent as ViewStack;
				parent.selectedIndex = 0;
			}
			
			public function collectData():Boolean{
				//Collect data
				var routeLineList:ArrayCollection = ArrayCollection (routeLines.dataProvider);
				for each(var obj:RouteLine in routeLineList){
					if(obj.startStopName == obj.endStopName){
						return false;
					}
				}
				vo.routeLineList = routeLineList;
				return true;
			}
			
		]]>
	</fx:Script>
	<fb:MultiColumnForm  width="100%" numColumns="1" label="基本信息" id="form">
		<!--<fb:MultiColumnFormItem label="承运商编码：" required="true">
		<mx:TextInput id="code" />
		</fb:MultiColumnFormItem>-->
		<fb:MultiColumnFormItem label="线路名称：" required="true" >
			<s:TextInput id="nameCN"  text="@{vo.name}" />
		</fb:MultiColumnFormItem>
		<fb:MultiColumnFormItem label="线路编号：" required="true" >
			<s:TextInput id="code"  text="@{vo.code}" />
		</fb:MultiColumnFormItem>
		<!--
		<fb:MultiColumnFormItem label="费用(元)："  >
			<s:TextInput id="charge"  text="@{vo.charge}"/>
		</fb:MultiColumnFormItem>
		-->
		<fb:MultiColumnFormItem label="里程(公里)：" >
			<s:TextInput id="distance"   text="@{vo.distance}" />
		</fb:MultiColumnFormItem>
		<fb:MultiColumnFormItem label="参考时效(分钟)：">
			<s:TextInput id="enrouteDays"   text="@{vo.enrouteDays}"/>
		</fb:MultiColumnFormItem>
		
		<fb:MultiColumnFormItem label="添加网点：" required="true" width="100%"  >
			<mx:Panel height="250"  width="90%"  title="网点维护" >
				<mx:HBox>
					<mx:Button label="添加网点" click="addPOS()" />					
					<mx:Button label="删除" click="deleteStop()"/>
				</mx:HBox>
				<grid:SelectableDataGrid id="routeLines"  horizontalScrollPolicy="auto"  dataProvider="{stops}"
								   showControlColumn="false" editable="true" width="100%" height="100%"   verticalScrollPolicy="auto" doubleClickEnabled="true" sortableColumns="false">
					<grid:columns>
						<grid:DataGridColumnNested headerText="起点" dataField="startStopName"    width="100"  editable="false" />
						<grid:DataGridColumnNested headerText="终点 " dataField="endStopName"  width="100"  editable="false"/>
						<grid:DataGridColumnNested headerText="里程(公里) " id="routeLineDistance" dataField="distance"  width="80" editable="true" itemEditor="com.best.oasis.flexbase.components.number.NumberInput" />
						<grid:DataGridColumnNested headerText="参考时效(分钟)" id="routeLineEnroute" dataField="enrouteDays" width="95"  editable="true" itemEditor="com.best.oasis.flexbase.components.number.NumberInput"/>
					</grid:columns>
				</grid:SelectableDataGrid>
			</mx:Panel>
		</fb:MultiColumnFormItem>
		<fb:MultiColumnFormItem label="备注：" width="90%">
			<s:TextArea id="remark"   text="@{vo.remark}" height="40" width="100%"/>
		</fb:MultiColumnFormItem>
	</fb:MultiColumnForm>
	
	<mx:HBox horizontalAlign="center" width="100%">
		<mx:Button label="保存" click="btnSave(event)"/>
		<mx:Button label="取消" click="btnReturn(event)"/>
	</mx:HBox>
</mx:Panel>


