<?xml version="1.0" encoding="utf-8"?>
<mx:Panel 
	xmlns:fx="http://ns.adobe.com/mxml/2009"      
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:fb="http://flexbase.800best.com/mxml"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:grid="com.oasis.component.grid.*"
	xmlns:flexlib="http://code.google.com/p/flexlib/"
	xmlns:nv="com.oasis.wolfburg.validator.*"
	width="100%" height="100%" xmlns:price="price.*" title="编辑" xmlns:dropDownList="com.oasis.component.dropDownList.*" >
	
	<fx:Declarations>
		<mx:NumberValidator id="validator1" source="{price}" minValue="0" precision="2" property="text" required="true" requiredFieldError="{resourceManager.getString('errorResource','requireNumber')}"/>
		<mx:NumberValidator id="validator2" source="{ventingPrice}" minValue="0" precision="2" property="text" required="true" requiredFieldError="{resourceManager.getString('errorResource','requireNumber')}"/>
		<mx:NumberValidator id="validator3" source="{overtimePrice}" minValue="0" precision="2" property="text" required="true" requiredFieldError="{resourceManager.getString('errorResource','requireNumber')}"/>
		<mx:StringValidator id="validator4" source="{periodStart}" property="text" required="true" requiredFieldError="{resourceManager.getString('errorResource','require')}"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			import com.best.oasis.flexbase.util.ValidationUtils;
			import com.oasis.tmsv5.event.PriceEvent;
			import com.oasis.tmsv5.price.PriceController;
			import com.oasis.tmsv5.utils.Constants;
			import com.oasis.tmsv5.view.popup.PredefinedCodeCreateDialog;
			import com.oasis.tmsv5.view.popup.PredefinedCodeDialog;
			import com.oasis.tmsv5.view.popup.RouteDialog;
			import com.oasis.tmsv5.vo.base.PredefinedCode;
			import com.oasis.utils.DateFormatterUtil;
			import com.oasis.utils.ViewUtils;
			import com.oasis.wolfburg.enum.EnumManage;
			import com.oasis.wolfburg.vo.price.Price;
			import com.oasis.wolfburg.vo.route.Route;
			
			import mx.collections.ArrayCollection;
			import mx.containers.ViewStack;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.validators.Validator;
			
			[Inject]
			public var priceController:PriceController;
			
			[Dispatcher]
			public var dispatch:IEventDispatcher;
			
			[Bindable]
			public var vo:Price= new Price();
			
			[Bindable]
			public var priceStatus:ArrayCollection = EnumManage.getPriceStatus();
			[Bindable]
			public var level:ArrayCollection = EnumManage.getTruckLevel();
			[Bindable]
			public var type:ArrayCollection = EnumManage.getTruckType();
			
			[Bindable]
			public var priceData:ArrayCollection = new ArrayCollection();
			
			public function freshForm():void{
				priceController.find(vo,temp);
			}
			
			private function temp():void{
				var parent:ViewStack= this.parent as ViewStack;
				parent.selectedIndex=2;
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				var parent:ViewStack = this.parent as ViewStack;
				parent.selectedIndex = 0;
			}
			
			public function setId(id:Number):void {
				vo.id=id;
			}
			
			protected function save_clickHandler(event:MouseEvent):void
			{
				
				var parent:ViewStack = this.parent as ViewStack;
				parent.selectedIndex = 0;
			}
			
			
			protected function cancel_clickHandler(event:MouseEvent):void
			{
				vo = new Price();
				ViewUtils.clearErrorString(form);
				//				provice.selectedIndex = 0;
				//				city.selectedIndex = 0;
				//				district.selectedIndex = 0;
				var parent:ViewStack = this.parent as ViewStack;
				parent.selectedIndex = 0;
			}
			
			/**
			 * 创建成功回调，弹出提示信息，清空表单
			 */ 
			private function successCallBack():void{
				Alert.show("费率本编辑成功!");
				dispatch.dispatchEvent(new PriceEvent(PriceEvent.PRICE_LIST_EVENT));
				freshCreateForm();
			}
			
			private function freshCreateForm():void{
				var parent:ViewStack= this.parent as ViewStack;
				parent.selectedIndex=1;
			}
			
			/**
			 * 创建失败回调，显示校验信息，后台方法见PriceComponent.validatIfCanCreate
			 */ 
			private function validationCallBack(event:FaultEvent):void{
				var error:Object = JSON.decode(event.fault.faultString);
				ValidationUtils.showAllFieldErrors(error,this,true);
			}
			
			/**
			 * 表单前台校验
			 */ 
			private function validate():Boolean{
				var errors:Array = Validator.validateAll([validator1,validator2,validator3,validator4]);
				if(errors.length > 0 ){
					return false;
				}
				return true;
			}
			
			private function update():void{
				if(!validate()){
					return;
				}
				//更新方法需要传两个回调函数
				//vo.truckLevel = truckLevel.selectedItem.data;
				vo.truckType = truckType.selectedItem.data;
				priceController.editPrice(vo,successCallBack,validationCallBack);
			}
			
			protected function getRoute():void {
				var dialog:RouteDialog = 
					RouteDialog(PopUpManager.createPopUp(root, RouteDialog , true));
				dialog.passFun = localFun;
				PopUpManager.centerPopUp(dialog);
			}
			
			public function localFun(item:Object):void{
				var route:Route = item as Route;
				vo.routeId = route.id;
				vo.routeName = route.name;
			}
			
			protected function getBrand():void {
				var dialog:PredefinedCodeDialog = 
					PredefinedCodeDialog(PopUpManager.createPopUp(root, PredefinedCodeDialog , true));
				dialog.passFun = brandFun;
				dialog.type = Constants.TRUCK_BRAND;
				PopUpManager.centerPopUp(dialog);
			}
			
			public function brandFun(item:Object):void{
				var pfc:PredefinedCode = item as PredefinedCode;
				vo.truckLevel = pfc.value;
			}
			
			public function createBrand():void{
				var dialog:PredefinedCodeCreateDialog = PredefinedCodeCreateDialog(PopUpManager.createPopUp(root, PredefinedCodeCreateDialog , true));
				dialog.type = Constants.TRUCK_BRAND;
				PopUpManager.centerPopUp(dialog);
				dialog.passFun = brandFun;
			}
			
			private function getTruckTypeLabel(item:Object,column:DataGridColumn):String{
				var truckType:String = item.truckType as String;
				return EnumManage.getDisplayText(truckType,type);
			}
			private function getPeriodStart(item:Object,column:DataGridColumn):String{
				var date:Date = item.periodStart as Date;
				return DateFormatterUtil.format1(date);
			}
		]]>
	</fx:Script>
	<mx:HBox width="100%">
		<fb:MultiColumnForm id="form" width="90%" label="基本信息">
			<fb:MultiColumnFormItem label="启用日期：">
				<mx:DateField id="periodStart" selectedDate="@{vo.periodStart}" formatString="YYYY-MM-DD"/>
			</fb:MultiColumnFormItem>
			<fb:MultiColumnFormItem label="停用日期：">
				<s:Label text="{DateFormatterUtil.format1(vo.periodEnd)}"/>
			</fb:MultiColumnFormItem>
			<!--
			<fb:MultiColumnFormItem label="费率状态：">
				<s:ComboBox dataProvider="{priceStatus}" />
			</fb:MultiColumnFormItem>
			-->
			<fb:MultiColumnFormItem label="线路名称：" required="true">
				<mx:TextInput id="routeName" text="@{vo.routeName}" editable="false"/>
			</fb:MultiColumnFormItem>
			<fb:MultiColumnFormItem label="车型：" required="true">
				<dropDownList:DropDownList dataProvider="{type}" id="truckType" enabled="false" searchKey="data" value="{vo.truckType}"/>
			</fb:MultiColumnFormItem>
			<fb:MultiColumnFormItem label="车辆品牌：">
				<mx:HBox>
					<fb:SelectableTextInput id="truckLevel" textInputEditable="false" text="@{vo.truckLevel}" searchButtonClick="getBrand"/>
					<mx:Button label="添加品牌" click="createBrand()"/>
				</mx:HBox>
			</fb:MultiColumnFormItem>
			<fb:MultiColumnFormItem label="正常结算价格：" required="true">
				<mx:TextInput id="price" text="@{vo.price}"/>
			</fb:MultiColumnFormItem>
			<fb:MultiColumnFormItem label="放空结算价格：" required="true">
				<mx:TextInput id="ventingPrice" text="@{vo.ventingPrice}"/>
			</fb:MultiColumnFormItem>
			<fb:MultiColumnFormItem label="加班车结算价格：" required="true">
				<mx:TextInput id="overtimePrice" text="@{vo.overtimePrice}"/>
			</fb:MultiColumnFormItem>
			<fb:MultiColumnFormItem label="备注：">
				<mx:TextInput text="@{vo.remark}"/>
			</fb:MultiColumnFormItem>
		</fb:MultiColumnForm>
	</mx:HBox>
	<mx:HBox width="100%" paddingLeft="50">
		<mx:Button label="保存" id="save" click="update()"/>
		<mx:Button label="取消" id="cancel" click="cancel_clickHandler(event)"/>
	</mx:HBox>
	
	<flexlib:WindowShade id="ws"
						 tabChildren="{ws.opened}"
						 styleName="linkButtonWindowShade"
						 label="历史记录"
						 width="99%" >	
		<grid:SelectableDataGrid id="grid" dataProvider="{vo.historyList}"  width="100%" allowMultipleSelection="false" height="100%" showControlColumn="false">
			<grid:columns>
				<mx:DataGridColumn headerText="编号" dataField="code" width="60"/>
				<mx:DataGridColumn headerText="线路名称" dataField="routeName" width="80"/>
				<mx:DataGridColumn headerText="车型" dataField="truckType" labelFunction="getTruckTypeLabel" width="60"/>
				<mx:DataGridColumn headerText="版本" dataField="version" width="50"/>
				<mx:DataGridColumn headerText="启用日期" width="120" dataField="periodStart" labelFunction="getPeriodStart"/>
			</grid:columns>
		</grid:SelectableDataGrid>
	</flexlib:WindowShade>
</mx:Panel>