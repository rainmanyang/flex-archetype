<?xml version="1.0" encoding="utf-8"?>
<mx:VBox 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:fb="http://flexbase.800best.com/mxml"
	xmlns:flexlib="http://code.google.com/p/flexlib/"
	xmlns:controls="flexlib.controls.*" 
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:input="com.best.oasis.flexbase.components.selectableTextInput.*"
	xmlns:popup="popup.*"
	width="100%" height="100%"  xmlns:truckRS="truckRS.*"
	xmlns:vehicle="truck.*" xmlns:dispatchDock="dispatchDock.*" creationComplete="init()" xmlns:grid="com.oasis.component.grid.*" xmlns:PremissionButton="com.oasis.component.PremissionButton.*">
	<fx:Script>
		<![CDATA[
			import com.best.oasis.flexbase.util.BeanUtils;
			import com.oasis.component.page.PageList;
			import com.oasis.tmsv5.route.RouteController;
			import com.oasis.tmsv5.truckRSSchedule.TruckRSJobController;
			import com.oasis.tmsv5.view.popup.SetRealRouteDialog;
			import com.oasis.tmsv5.view.popup.TruckDialog4Dispatch;
			import com.oasis.tmsv5.view.popup.calendar.CalendarDialog;
			import com.oasis.utils.DateFormatterUtil;
			import com.oasis.wolfburg.enum.EnumManage;
			import com.oasis.wolfburg.so.route.RouteSO;
			import com.oasis.wolfburg.so.truckRSSchedule.TruckRSJobSO;
			import com.oasis.wolfburg.vo.route.Route;
			import com.oasis.wolfburg.vo.truck.Truck;
			import com.oasis.wolfburg.vo.truckRSSchedule.TruckRSJob;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			public static const millisecondsPerDay:int = 1000 * 60 * 60 * 24;
			
			[Inject]
			public var truckRsJobController:TruckRSJobController;
			
			[Bindable]
			public var so:TruckRSJobSO = new TruckRSJobSO();
			
			[Bindable]
			public var rsPageList:PageList = new PageList();
			
			[Bindable]
			public var pageList:PageList = new PageList();
			
			[Bindable]
			public var routeSO:RouteSO = new RouteSO();
			
			[Bindable]
			public var routePageList:PageList = new PageList();
			
			[Bindable]
			public var realRoutePageList:PageList = new PageList();
			
			[Inject]
			public var routeController:RouteController;
			private function init():void {
				setSearchInterval();
				getPageList(so.pageNumber, so.objectsPerPage);
			}
			
			private function setSearchInterval():void{
				var start:Date = new Date();
				start.setTime((new Date()).getTime() - millisecondsPerDay);
				start.setHours(8,0,0,0);
				var end:Date = new Date();
				end.setHours(8,0,0,0);
				so.endStartDate = start;
				so.endEndDate = end;
			}
			private function getWeek(item:Object,column:DataGridColumn):String{
				var date:Date = (item as TruckRSJob).startDate;
				return DateFormatterUtil.weekDay(date.day);
			}
			
			private function getStatus(item:Object,column:DataGridColumn):String{
				return EnumManage.getDisplayText(item.status,EnumManage.getRSJobStatus());
			}
			
			private function getEventPhase(item:Object,column:DataGridColumn):String{
				return EnumManage.getDisplayText(item.eventPhase,EnumManage.getEventPhase());
			}
			
			private function getType(item:Object,column:DataGridColumn):String {
				return EnumManage.getDisplayText(item.rsJobType,EnumManage.getRsjobType());
			}
			
			private function getDate(item:Object,column:DataGridColumn):String {
				var date:Date = (item as TruckRSJob).startDate;
				return DateFormatterUtil.format2(date);
			}
			
			private function getEndDate(item:Object,column:DataGridColumn):String {
				var date:Date = (item as TruckRSJob).endDate;
				return DateFormatterUtil.format2(date);
			}
			
			/**
			 *查询任务单列表 
			 */ 
			protected function getPageList(pageNum:int, pageSize:int,callBack:Function=null):void{
				so.pageNumber = pageNum;
				so.objectsPerPage = pageSize;
				so.endStartDate = endStartDate.date;
				so.endEndDate = endEndDate.date;
				so.endStartDate.setSeconds(0,0);
				so.endEndDate.setSeconds(0,0);
				so.status = status.selectedItem.data;
				so.rsJobType = rsJobType.selectedItem.data;
				so.isDisposed = isDisposed.selectedItem.data;
				so.statuses = new ArrayCollection([EnumManage.RSJobStatus3.data,EnumManage.RSJobStatus4.data,EnumManage.RSJobStatus5.data,EnumManage.RSJobStatus7.data]);
				scheduleGrid.unselectAll();
				so.exceptional=true;
				truckRsJobController.getExceptionalPageList(so,pageList);
			}
			
			public function openCalendar(id:int):void{
				var dialog:CalendarDialog = CalendarDialog(PopUpManager.createPopUp(root, CalendarDialog , true));
				dialog.jobId = id;
				PopUpManager.centerPopUp(dialog);
			}
			
			public function changeRouteSelect ():void {
				if (route_.selectedItem != null) {
					var input:Route = route_.selectedItem as Route;
					so.routeId = route_.selectedItem.id
					so.routeName=route_.selectedItem.name
				}  else {
					routeSO.name = null;
					so.routeId = NaN;
					so.routeName = null;
				}
			}
			
			public function changeRealRouteSelect ():void {
				if (realroute_.selectedItem != null) {
					var input:Route = realroute_.selectedItem as Route;
					so.realRouteId = realroute_.selectedItem.id
					so.realRouteName=realroute_.selectedItem.name
				}  else {
					routeSO.name = null;
					so.realRouteId = NaN;
					so.realRouteName = null;
				}
			}
			
			private function searchRoute(keyword:String):void {
				var routeSO:RouteSO = new RouteSO();
				routeSO.name =keyword;
				getRoutePageData(routeSO);
			}
			
			private function searchRealRoute(keyword:String):void {
				var routeSO:RouteSO = new RouteSO();
				routeSO.name =keyword;
				getRealRoutePageData(routeSO);
			}
			
			private function getRoutePageData(routeSO:RouteSO ,callBack:Function=null):void{
				routeSO.pageNumber = 1;
				routeSO.objectsPerPage = 10;
				routeController.getPageList(routeSO, routePageList,callBack);
			}
			
			private function getRealRoutePageData(routeSO:RouteSO ,callBack:Function=null):void{
				routeSO.pageNumber = 1;
				routeSO.objectsPerPage = 10;
				routeController.getPageList(routeSO, realRoutePageList,callBack);
			}
			
			/**
			 * 清空查询
			 */ 
			protected function clear():void {
				so = new TruckRSJobSO();
				status.selectedIndex=0;
				rsJobType.selectedIndex=0;
				setSearchInterval();
				route_.clear();
				realroute_.clear();
				isDisposed.selectedIndex = 0;
				getPageList(so.pageNumber, so.objectsPerPage);
			}
			
			/**
			 * 修改实际线路
			 */ 
			public function putRealRoute(data:Object):void {
				
				var truckJob:TruckRSJob = scheduleGrid.selectedItem as TruckRSJob;
				if(truckJob == null){
					return;
				}
				var dialog:SetRealRouteDialog = SetRealRouteDialog(PopUpManager.createPopUp(root, SetRealRouteDialog , true));
				dialog.vo = BeanUtils.clone(truckJob) as TruckRSJob;
				PopUpManager.centerPopUp(dialog);
				dialog.addEventListener(Event.COMPLETE, editDialogOnComplete);
				
			}
			
			private function editDialogOnComplete(event:Event):void{
				getPageList(1, so.objectsPerPage);
			}
			
			protected function finishExceptionalJob():void {
				var jobList:Array = scheduleGrid.selectedItems;
				if(jobList.length == 0){
					Alert.show("请选择任务单!");
					return;
				}
				var errors:String ="";
				for each(var elm:TruckRSJob in jobList){
					if(elm.realRouteName == null){
						errors += elm.code +"\n";
					}
				}
				if(errors != ""){
					errors += "实际线路未填，任务单无法完成!"
					Alert.show(errors);
					errors = "";
					return;
				}
				Alert.show("您确认要完成任务单?","确认",Alert.YES|Alert.NO,null, 
					function(closeEvent:CloseEvent):void{
						if (closeEvent.detail==Alert.YES){
							truckRsJobController.batchCloselExceptionalRSJob(jobList,finishExceptionalJobCallback);
						}
					});
			}
			
			protected function finishExceptionalJobCallback():void {
				getPageList(1, so.objectsPerPage);
			}
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%">
		<flexlib:WindowShade id="ws1" styleName="linkButtonWindowShade" width="100%" label="查询" height="23%">
			<fb:MultiColumnForm  id="searchForm" numColumns="2" width="100%" height="100%" defaultButton="{searchBtn}">
				<fb:MultiColumnFormItem label="任务单号：" >
					<mx:TextInput text="@{so.code}" width="160"/>
				</fb:MultiColumnFormItem >
				<fb:MultiColumnFormItem label="状态">
					<s:DropDownList id="status" dataProvider="{EnumManage.getExceptionRSJobStatusr4list()}" selectedIndex="0" />
				</fb:MultiColumnFormItem>
				<fb:MultiColumnFormItem label="计划线路：">
					<input:PopUpAutoComplete id="route_" selectedItemChanged="changeRouteSelect()"
											 enabled="true"
											 width="120"
											 searchButtonVisible="false"
											 clearButtonVisible="false"
											 searchButtonEnabled="false"
											 clearButtonEnabled="true"
											 textInputEnabled="true"
											 textInputEditable="true"
											 dataProvider="{routePageList.list}"
											 labelField="name,code"
											 displayLabelField="name"
											 searchFunction="searchRoute"
											 allowNewValues="false"
											 focusOut="changeRouteSelect()" dropDownWidth="200"/>
				</fb:MultiColumnFormItem>
				<fb:MultiColumnFormItem label="实际线路：">
					<input:PopUpAutoComplete id="realroute_" selectedItemChanged="changeRealRouteSelect()"
											 enabled="true"
											 width="120"
											 searchButtonVisible="false"
											 clearButtonVisible="false"
											 searchButtonEnabled="false"
											 clearButtonEnabled="true"
											 textInputEnabled="true"
											 textInputEditable="true"
											 dataProvider="{realRoutePageList.list}"
											 labelField="name,code"
											 displayLabelField="name"
											 searchFunction="searchRealRoute"
											 allowNewValues="false"
											 focusOut="changeRealRouteSelect()" dropDownWidth="200"/>
				</fb:MultiColumnFormItem>
				<fb:MultiColumnFormItem label="任务类型：">
					<s:DropDownList id="rsJobType" dataProvider="{EnumManage.getRsjobType4List()}" selectedIndex="0"/>
				</fb:MultiColumnFormItem >
				<fb:MultiColumnFormItem label="处理状态：">
					<s:DropDownList id="isDisposed" dataProvider="{EnumManage.getIsDisposedType()}" selectedIndex="0"/>
				</fb:MultiColumnFormItem >
				<fb:MultiColumnFormItem label="到达时间起：">
					<fb:DateTimeInput id="endStartDate" date="{so.endStartDate}" allowDatePick="false" />
				</fb:MultiColumnFormItem >
				<fb:MultiColumnFormItem label="到达时间止：">
					<fb:DateTimeInput id="endEndDate" date="{so.endEndDate}" allowDatePick="false"/>
				</fb:MultiColumnFormItem >
				<fb:MultiColumnFormItem colspan="2">
					<s:HGroup paddingTop="10">
						<mx:Button label="查询" click="getPageList(1, so.objectsPerPage)" id="searchBtn"/>
						<mx:Button label="清空查询" click="clear()"/>
					</s:HGroup>
				</fb:MultiColumnFormItem >
			</fb:MultiColumnForm>
		</flexlib:WindowShade>
		<mx:HBox width="100%">
			<PremissionButton:PremissionButton id="finishExceptional" click="finishExceptionalJob()" label="异常任务结束" module="Exceptional" premission="finish"/>
		</mx:HBox>
		<mx:Panel id="ws4" title="任务单" width="100%" height="100%">
			<grid:PageableDataGrid id="scheduleGrid" showControlColumn="true" getPageData="getPageList" 
								   currentPageNum="{so.pageNumber}" totalItemNum="{pageList.fullListSize}"
								   width="100%" height="100%" allowMultipleSelection="true" 
								   dataProvider="{pageList.list}" pageSize="{so.objectsPerPage}"
								   horizontalScrollPolicy="on">
				<grid:columns >
					<grid:DataGridColumnNested headerText="处理状态" width="70" dataField="isDisposedStr" sortable="true" /> 
					<grid:DataGridColumnNested headerText="计划出发" width="110" labelFunction="getDate" sortable="true" /> 
					<grid:DataGridColumnNested headerText="计划到达" width="110" labelFunction="getEndDate" sortable="true" /> 
					<grid:DataGridColumnNested headerText="状态" width="50" labelFunction="getStatus"/>
					<grid:DataGridColumnNested headerText="任务单号"  dataField="code" width="150" sortable="true"/>
					<grid:DataGridColumnNested headerText="车牌号" width="80" dataField="licensePlate" sortable="true"/>
					<grid:DataGridColumnNested headerText="班车卡号" width="80" dataField="identityCard" sortable="true"/>
					<grid:DataGridColumnNested headerText="线路" dataField="routeName" sortable="true" width="150"/>
					<grid:DataGridColumnNested headerText="实际运行站点" dataField="realPOSName" sortable="true" width="150"/>
					<grid:DataGridColumnNested headerText="实际线路" dataField="realRouteName" sortable="true" width="150"/>
					<grid:DataGridColumnNested headerText="pin码"  dataField="pinCode" width="100" sortable="true"/>
					<grid:DataGridColumnNested headerText="类型" width="60" labelFunction="getType"/>
					<grid:DataGridColumnNested headerText="备注" width="150" dataField="remark"/>
					<grid:DataGridColumnNested headerText="异常备注" width="150" dataField="exceptionalRemark"/>
					<grid:DataGridColumnNested width="100" headerText="操作">
						<grid:itemRenderer>
							<fx:Component>
								<mx:LinkButton label="实际线路调整" color="0x3380DD" click="outerDocument.putRealRoute(data);"
											   textDecoration="underline" fontWeight="normal" />
							</fx:Component>
						</grid:itemRenderer>
					</grid:DataGridColumnNested>
				</grid:columns>
			</grid:PageableDataGrid >
		</mx:Panel>
	</s:VGroup>
</mx:VBox>


